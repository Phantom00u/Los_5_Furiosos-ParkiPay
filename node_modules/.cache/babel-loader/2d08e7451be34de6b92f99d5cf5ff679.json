{"ast":null,"code":"import getCookie from '../Funciones/GetCookie';\nlet nombreP = \"\";\nlet usuarioP = \"\";\nlet correoP = \"\";\nlet telefonoP = \"\";\nlet credencialP = \"\";\nexport default async function ajaxEdicionUsuario(nombrePP, usuarioPP, correoPP, telefonoPP, credencialPP) {\n  nombreP = nombrePP;\n  usuarioP = usuarioPP;\n  correoP = correoPP;\n  telefonoP = telefonoPP;\n  credencialP = credencialPP;\n  if (validarDatos()) {\n    var body = {\n      id: getCookie(\"id\"),\n      name: nombreP,\n      usuario: usuarioP,\n      email: correoP,\n      telephone: telefonoP,\n      password: credencialP\n    };\n    const response = await fetch(`http://localhost:3001/api/login`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    });\n    const respJson = await response.json();\n    console.log(JSON.stringify(respJson));\n    if (respJson.success) {\n      document.cookie = \"nombre=\" + respJson.Data['name'] + \";\";\n      document.cookie = \"correo=\" + respJson.Data['email'] + \";\";\n      document.cookie = \"usuario=\" + respJson.Data['usuario'] + \";\";\n      document.cookie = \"telefono=\" + respJson.Data['telephone'] + \";\";\n      document.cookie = \"id=\" + respJson.Data['_id'] + \";\";\n      alert(\"Usuario editado correctamente\");\n      window.location.href = \"/\";\n      return;\n    } else {\n      alert(\"Usuario no editado\");\n    }\n  }\n}\nfunction validarDatos() {\n  let errores = 0;\n  let txt = \"\";\n  if (nombreP == \"\") {\n    nombreP = null;\n  } else {\n    let regexNombre = /^[a-zA-Z\\sñÁÉÍÓÚáéíóúàèìòùÀÈÌÒÙ]*$/;\n    if (!regexNombre.test(nombreP)) {\n      txt = txt + \"El nombre solo puede contener letras.\\n\";\n      errores++;\n    }\n    if (nombreP.length > 100) {\n      txt = txt + \"El nombre no puede tener más de 100 caracteres.\\n\";\n      errores++;\n    }\n  }\n  let regexNombreYCredencial = /^[a-zA-ZñÑ0-9¿?¡!@#$%&]*$/;\n  if (usuarioP == \"\") {\n    usuarioP = null;\n  } else {\n    if (!regexNombreYCredencial.test(usuarioP)) {\n      txt = txt + \"El usuario solo puede contener letras, numeros o los siguientes simbolos ¿?¡!@#$%&.\\n\";\n      errores++;\n    }\n    if (usuarioP.length > 30) {\n      txt = txt + \"El usuario no puede tener más de 30 caracteres.\\n\";\n      errores++;\n    }\n  }\n  if (credencialP == \"\") {\n    credencialP = null;\n  } else {\n    if (!regexNombreYCredencial.test(credencialP)) {\n      txt = txt + \"La contraseña solo puede contener letras, numeros o los siguientes simbolos ¿?¡!@#$%&.\\n\";\n      errores++;\n    }\n    if (credencialP.length > 30) {\n      txt = txt + \"La contraseña no puede tener más de 30 caracteres.\\n\";\n      errores++;\n    }\n  }\n  if (telefonoP == \"\") {\n    telefonoP = null;\n  } else {\n    let regexTelefono = /^[0-9]*$/;\n    if (!regexTelefono.test(telefonoP)) {\n      txt = txt + \"El telefono solo puede contener numeros.\\n\";\n      errores++;\n    }\n    if (telefonoP.length != 10) {\n      txt = txt + \"El telefono debe tener 10 caracteres.\\n\";\n      errores++;\n    }\n  }\n  if (correoP == \"\") {\n    correoP = null;\n  } else {\n    let regexCorreo = /^[^@]+@[^@]+\\.[a-zA-Z]{2,}$/;\n    if (!regexCorreo.test(correoP)) {\n      txt = txt + \"El correo ingreado es incorrecto.\\n\";\n      errores++;\n    }\n  }\n  if (errores == 0) return true;else {\n    alert(txt);\n    return false;\n  }\n}","map":{"version":3,"names":["getCookie","nombreP","usuarioP","correoP","telefonoP","credencialP","ajaxEdicionUsuario","nombrePP","usuarioPP","correoPP","telefonoPP","credencialPP","validarDatos","body","id","name","usuario","email","telephone","password","response","fetch","method","headers","JSON","stringify","respJson","json","console","log","success","document","cookie","Data","alert","window","location","href","errores","txt","regexNombre","test","length","regexNombreYCredencial","regexTelefono","regexCorreo"],"sources":["C:/Users/Spicy/Documents/GitHub/Los_5_Furiosos-ParkiPay/src/Funciones/Editar_Usuario.js"],"sourcesContent":["import getCookie from '../Funciones/GetCookie';\r\nlet nombreP = \"\";\r\nlet usuarioP = \"\";\r\nlet correoP = \"\";\r\nlet telefonoP = \"\";\r\nlet credencialP = \"\";\r\nexport default async function ajaxEdicionUsuario(nombrePP,usuarioPP,correoPP,telefonoPP,credencialPP){\r\n    nombreP = nombrePP;\r\n    usuarioP = usuarioPP;\r\n    correoP = correoPP;\r\n    telefonoP = telefonoPP;\r\n    credencialP = credencialPP;\r\n    if(validarDatos()){\r\n        var body = {\r\n            id: getCookie(\"id\"),\r\n            name: nombreP,\r\n            usuario: usuarioP,\r\n            email: correoP,\r\n            telephone: telefonoP,\r\n            password: credencialP\r\n        }\r\n        const response = await fetch(`http://localhost:3001/api/login`,\r\n            {\r\n              method: 'PATCH',\r\n              headers: {'Content-Type': 'application/json'},\r\n              body: JSON.stringify(body)\r\n            }\r\n        );\r\n        \r\n        const respJson = await response.json();\r\n        console.log(JSON.stringify(respJson));\r\n        if (respJson.success) {\r\n            document.cookie = \"nombre=\" + respJson.Data['name'] + \";\";\r\n            document.cookie = \"correo=\" + respJson.Data['email'] + \";\";\r\n            document.cookie = \"usuario=\" + respJson.Data['usuario'] + \";\";\r\n            document.cookie = \"telefono=\" + respJson.Data['telephone']+ \";\";\r\n            document.cookie = \"id=\" + respJson.Data['_id'] + \";\";\r\n            alert(\"Usuario editado correctamente\");\r\n            window.location.href = \"/\";\r\n            return;\r\n        }else{\r\n            alert(\"Usuario no editado\");\r\n        }\r\n    } \r\n }\r\n\r\n function validarDatos(){\r\n    let errores = 0;\r\n    let txt = \"\";\r\n    if(nombreP ==\"\"){\r\n        nombreP = null;\r\n    }else{\r\n        let regexNombre = /^[a-zA-Z\\sñÁÉÍÓÚáéíóúàèìòùÀÈÌÒÙ]*$/;\r\n        if(!regexNombre.test(nombreP)){\r\n            txt = txt + \"El nombre solo puede contener letras.\\n\"\r\n            errores++;\r\n        }\r\n        if(nombreP.length > 100){\r\n            txt = txt + \"El nombre no puede tener más de 100 caracteres.\\n\"\r\n            errores++;\r\n        }\r\n    }\r\n\r\n    let regexNombreYCredencial = /^[a-zA-ZñÑ0-9¿?¡!@#$%&]*$/;\r\n    if(usuarioP ==\"\"){\r\n        usuarioP = null;\r\n    }else{  \r\n        if(!regexNombreYCredencial.test(usuarioP)){\r\n            txt = txt + \"El usuario solo puede contener letras, numeros o los siguientes simbolos ¿?¡!@#$%&.\\n\"\r\n            errores++;\r\n        }\r\n        if(usuarioP.length > 30){\r\n            txt = txt + \"El usuario no puede tener más de 30 caracteres.\\n\"\r\n            errores++;\r\n        }\r\n    }\r\n\r\n    if(credencialP ==\"\"){\r\n        credencialP = null;\r\n    }else{  \r\n        if(!regexNombreYCredencial.test(credencialP)){\r\n            txt = txt + \"La contraseña solo puede contener letras, numeros o los siguientes simbolos ¿?¡!@#$%&.\\n\"\r\n            errores++;\r\n        }\r\n        if(credencialP.length > 30){\r\n            txt = txt + \"La contraseña no puede tener más de 30 caracteres.\\n\"\r\n            errores++;\r\n        }\r\n    }\r\n\r\n    if(telefonoP ==\"\"){\r\n        telefonoP = null;\r\n    }else{\r\n        let regexTelefono = /^[0-9]*$/;\r\n        if(!regexTelefono.test(telefonoP)){\r\n            txt = txt + \"El telefono solo puede contener numeros.\\n\"\r\n            errores++;\r\n        }\r\n        if(telefonoP.length != 10){\r\n            txt = txt + \"El telefono debe tener 10 caracteres.\\n\"\r\n            errores++;\r\n        }\r\n    }\r\n    \r\n    if(correoP ==\"\"){\r\n        correoP = null;\r\n    }else{\r\n        let regexCorreo = /^[^@]+@[^@]+\\.[a-zA-Z]{2,}$/;\r\n        if(!regexCorreo.test(correoP)){\r\n            txt = txt + \"El correo ingreado es incorrecto.\\n\"\r\n            errores++;\r\n        }\r\n    }\r\n\r\n    if (errores == 0)\r\n        return true;\r\n    else{\r\n        alert(txt)\r\n        return false;\r\n    }\r\n }"],"mappings":"AAAA,OAAOA,SAAS,MAAM,wBAAwB;AAC9C,IAAIC,OAAO,GAAG,EAAE;AAChB,IAAIC,QAAQ,GAAG,EAAE;AACjB,IAAIC,OAAO,GAAG,EAAE;AAChB,IAAIC,SAAS,GAAG,EAAE;AAClB,IAAIC,WAAW,GAAG,EAAE;AACpB,eAAe,eAAeC,kBAAkB,CAACC,QAAQ,EAACC,SAAS,EAACC,QAAQ,EAACC,UAAU,EAACC,YAAY,EAAC;EACjGV,OAAO,GAAGM,QAAQ;EAClBL,QAAQ,GAAGM,SAAS;EACpBL,OAAO,GAAGM,QAAQ;EAClBL,SAAS,GAAGM,UAAU;EACtBL,WAAW,GAAGM,YAAY;EAC1B,IAAGC,YAAY,EAAE,EAAC;IACd,IAAIC,IAAI,GAAG;MACPC,EAAE,EAAEd,SAAS,CAAC,IAAI,CAAC;MACnBe,IAAI,EAAEd,OAAO;MACbe,OAAO,EAAEd,QAAQ;MACjBe,KAAK,EAAEd,OAAO;MACde,SAAS,EAAEd,SAAS;MACpBe,QAAQ,EAAEd;IACd,CAAC;IACD,MAAMe,QAAQ,GAAG,MAAMC,KAAK,CAAE,iCAAgC,EAC1D;MACEC,MAAM,EAAE,OAAO;MACfC,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB,CAAC;MAC7CV,IAAI,EAAEW,IAAI,CAACC,SAAS,CAACZ,IAAI;IAC3B,CAAC,CACJ;IAED,MAAMa,QAAQ,GAAG,MAAMN,QAAQ,CAACO,IAAI,EAAE;IACtCC,OAAO,CAACC,GAAG,CAACL,IAAI,CAACC,SAAS,CAACC,QAAQ,CAAC,CAAC;IACrC,IAAIA,QAAQ,CAACI,OAAO,EAAE;MAClBC,QAAQ,CAACC,MAAM,GAAG,SAAS,GAAGN,QAAQ,CAACO,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG;MACzDF,QAAQ,CAACC,MAAM,GAAG,SAAS,GAAGN,QAAQ,CAACO,IAAI,CAAC,OAAO,CAAC,GAAG,GAAG;MAC1DF,QAAQ,CAACC,MAAM,GAAG,UAAU,GAAGN,QAAQ,CAACO,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG;MAC7DF,QAAQ,CAACC,MAAM,GAAG,WAAW,GAAGN,QAAQ,CAACO,IAAI,CAAC,WAAW,CAAC,GAAE,GAAG;MAC/DF,QAAQ,CAACC,MAAM,GAAG,KAAK,GAAGN,QAAQ,CAACO,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG;MACpDC,KAAK,CAAC,+BAA+B,CAAC;MACtCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,GAAG;MAC1B;IACJ,CAAC,MAAI;MACDH,KAAK,CAAC,oBAAoB,CAAC;IAC/B;EACJ;AACH;AAEA,SAAStB,YAAY,GAAE;EACpB,IAAI0B,OAAO,GAAG,CAAC;EACf,IAAIC,GAAG,GAAG,EAAE;EACZ,IAAGtC,OAAO,IAAG,EAAE,EAAC;IACZA,OAAO,GAAG,IAAI;EAClB,CAAC,MAAI;IACD,IAAIuC,WAAW,GAAG,oCAAoC;IACtD,IAAG,CAACA,WAAW,CAACC,IAAI,CAACxC,OAAO,CAAC,EAAC;MAC1BsC,GAAG,GAAGA,GAAG,GAAG,yCAAyC;MACrDD,OAAO,EAAE;IACb;IACA,IAAGrC,OAAO,CAACyC,MAAM,GAAG,GAAG,EAAC;MACpBH,GAAG,GAAGA,GAAG,GAAG,mDAAmD;MAC/DD,OAAO,EAAE;IACb;EACJ;EAEA,IAAIK,sBAAsB,GAAG,2BAA2B;EACxD,IAAGzC,QAAQ,IAAG,EAAE,EAAC;IACbA,QAAQ,GAAG,IAAI;EACnB,CAAC,MAAI;IACD,IAAG,CAACyC,sBAAsB,CAACF,IAAI,CAACvC,QAAQ,CAAC,EAAC;MACtCqC,GAAG,GAAGA,GAAG,GAAG,uFAAuF;MACnGD,OAAO,EAAE;IACb;IACA,IAAGpC,QAAQ,CAACwC,MAAM,GAAG,EAAE,EAAC;MACpBH,GAAG,GAAGA,GAAG,GAAG,mDAAmD;MAC/DD,OAAO,EAAE;IACb;EACJ;EAEA,IAAGjC,WAAW,IAAG,EAAE,EAAC;IAChBA,WAAW,GAAG,IAAI;EACtB,CAAC,MAAI;IACD,IAAG,CAACsC,sBAAsB,CAACF,IAAI,CAACpC,WAAW,CAAC,EAAC;MACzCkC,GAAG,GAAGA,GAAG,GAAG,0FAA0F;MACtGD,OAAO,EAAE;IACb;IACA,IAAGjC,WAAW,CAACqC,MAAM,GAAG,EAAE,EAAC;MACvBH,GAAG,GAAGA,GAAG,GAAG,sDAAsD;MAClED,OAAO,EAAE;IACb;EACJ;EAEA,IAAGlC,SAAS,IAAG,EAAE,EAAC;IACdA,SAAS,GAAG,IAAI;EACpB,CAAC,MAAI;IACD,IAAIwC,aAAa,GAAG,UAAU;IAC9B,IAAG,CAACA,aAAa,CAACH,IAAI,CAACrC,SAAS,CAAC,EAAC;MAC9BmC,GAAG,GAAGA,GAAG,GAAG,4CAA4C;MACxDD,OAAO,EAAE;IACb;IACA,IAAGlC,SAAS,CAACsC,MAAM,IAAI,EAAE,EAAC;MACtBH,GAAG,GAAGA,GAAG,GAAG,yCAAyC;MACrDD,OAAO,EAAE;IACb;EACJ;EAEA,IAAGnC,OAAO,IAAG,EAAE,EAAC;IACZA,OAAO,GAAG,IAAI;EAClB,CAAC,MAAI;IACD,IAAI0C,WAAW,GAAG,6BAA6B;IAC/C,IAAG,CAACA,WAAW,CAACJ,IAAI,CAACtC,OAAO,CAAC,EAAC;MAC1BoC,GAAG,GAAGA,GAAG,GAAG,qCAAqC;MACjDD,OAAO,EAAE;IACb;EACJ;EAEA,IAAIA,OAAO,IAAI,CAAC,EACZ,OAAO,IAAI,CAAC,KACZ;IACAJ,KAAK,CAACK,GAAG,CAAC;IACV,OAAO,KAAK;EAChB;AACH"},"metadata":{},"sourceType":"module"}