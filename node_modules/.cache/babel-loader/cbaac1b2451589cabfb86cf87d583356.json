{"ast":null,"code":"module.exports = function ajaxRegistro() {\n  let nombre = document.getElementsByName(\"name_user\")[0].value;\n  let usuario = document.getElementsByName(\"username_user\")[0].value;\n  let correo = document.getElementsByName(\"email_user\")[0].value;\n  let telefono = document.getElementsByName(\"tel_user\")[0].value;\n  let credencial = document.getElementsByName(\"pssw_user\")[0].value;\n  validarDatos(nombre, usuario, correo, telefono, credencial);\n};\nfunction validarDatos(nombreP, usuarioP, correoP, telefonoP, credencialP) {\n  let errores = 0;\n  let txt = \"\";\n  if (nombreP == \"\") {\n    txt = txt + \"El nombre está vacío.\\n\";\n    errores++;\n  } else {\n    let regexNombre = /^[a-zA-Z\\sñÁÉÍÓÚáéíóúàèìòùÀÈÌÒÙ]*$/;\n    if (!regexNombre.test(nombreP)) {\n      txt = txt + \"El nombre solo puede contener letras.\\n\";\n      errores++;\n    }\n    if (nombreP.length > 100) {\n      txt = txt + \"El nombre no puede tener más de 100 caracteres.\\n\";\n      errores++;\n    }\n  }\n  let regexNombreYCredencial = /^[a-zA-ZñÑ0-9¿?¡!@#$%&]*$/;\n  if (usuarioP == \"\") {\n    txt = txt + \"El usuario está vacío.\\n\";\n    errores++;\n  } else {\n    if (!regexNombreYCredencial.test(usuarioP)) {\n      txt = txt + \"El usuario solo puede contener letras, numeros o los siguientes simbolos ¿?¡!@#$%&.\\n\";\n      errores++;\n    }\n    if (usuarioP.length > 30) {\n      txt = txt + \"El usuario no puede tener más de 30 caracteres.\\n\";\n      errores++;\n    }\n  }\n  if (credencialP == \"\") {\n    txt = txt + \"La contraseña está vacío.\\n\";\n    errores++;\n  } else {\n    if (!regexNombreYCredencial.test(credencialP)) {\n      txt = txt + \"La contraseña solo puede contener letras, numeros o los siguientes simbolos ¿?¡!@#$%&.\\n\";\n      errores++;\n    }\n    if (credencialP.length > 30) {\n      txt = txt + \"La contraseña no puede tener más de 30 caracteres.\\n\";\n      errores++;\n    }\n  }\n  if (telefonoP == \"\") {\n    txt = txt + \"El campo de telefono está vacío.\\n\";\n    errores++;\n  } else {\n    let regexTelefono = /^[0-9]*$/;\n    if (!regexTelefono.test(telefonoP)) {\n      txt = txt + \"El telefono solo puede contener numeros.\\n\";\n      errores++;\n    }\n    if (telefonoP.length != 8) {\n      txt = txt + \"El telefono no puede tener más de 8 caracteres.\\n\";\n      errores++;\n    }\n  }\n  if (correoP == \"\") {\n    txt = txt + \"El correo está vacío.\\n\";\n    errores++;\n  } else {\n    let regexCorreo = /^[^@]+@[^@]+\\.[a-zA-Z]{2,}$/;\n    if (!regexCorreo.test(correoP)) {\n      txt = txt + \"El correo ingreado es incorrecto.\\n\";\n      errores++;\n    }\n  }\n}","map":{"version":3,"names":["module","exports","ajaxRegistro","nombre","document","getElementsByName","value","usuario","correo","telefono","credencial","validarDatos","nombreP","usuarioP","correoP","telefonoP","credencialP","errores","txt","regexNombre","test","length","regexNombreYCredencial","regexTelefono","regexCorreo"],"sources":["C:/xampp/htdocs/Visual_Code_Projects/PrograWeb2/src/Funciones/Crear_Usuario.js"],"sourcesContent":[" module.exports = function ajaxRegistro(){\r\n    let nombre = document.getElementsByName(\"name_user\")[0].value;\r\n    let usuario = document.getElementsByName(\"username_user\")[0].value;\r\n    let correo = document.getElementsByName(\"email_user\")[0].value;\r\n    let telefono = document.getElementsByName(\"tel_user\")[0].value;\r\n    let credencial = document.getElementsByName(\"pssw_user\")[0].value;\r\n    validarDatos(nombre,usuario,correo,telefono,credencial); \r\n }\r\n\r\n function validarDatos(nombreP, usuarioP, correoP, telefonoP, credencialP){\r\n    let errores = 0;\r\n    let txt = \"\";\r\n    if(nombreP ==\"\"){\r\n        txt = txt + \"El nombre está vacío.\\n\";\r\n        errores++;\r\n    }else{\r\n        let regexNombre = /^[a-zA-Z\\sñÁÉÍÓÚáéíóúàèìòùÀÈÌÒÙ]*$/;\r\n        if(!regexNombre.test(nombreP)){\r\n            txt = txt + \"El nombre solo puede contener letras.\\n\"\r\n            errores++;\r\n        }\r\n        if(nombreP.length > 100){\r\n            txt = txt + \"El nombre no puede tener más de 100 caracteres.\\n\"\r\n            errores++;\r\n        }\r\n    }\r\n\r\n    let regexNombreYCredencial = /^[a-zA-ZñÑ0-9¿?¡!@#$%&]*$/;\r\n    if(usuarioP ==\"\"){\r\n        txt = txt + \"El usuario está vacío.\\n\";\r\n        errores++;\r\n    }else{  \r\n        if(!regexNombreYCredencial.test(usuarioP)){\r\n            txt = txt + \"El usuario solo puede contener letras, numeros o los siguientes simbolos ¿?¡!@#$%&.\\n\"\r\n            errores++;\r\n        }\r\n        if(usuarioP.length > 30){\r\n            txt = txt + \"El usuario no puede tener más de 30 caracteres.\\n\"\r\n            errores++;\r\n        }\r\n    }\r\n\r\n    if(credencialP ==\"\"){\r\n        txt = txt + \"La contraseña está vacío.\\n\";\r\n        errores++;\r\n    }else{\r\n        \r\n        if(!regexNombreYCredencial.test(credencialP)){\r\n            txt = txt + \"La contraseña solo puede contener letras, numeros o los siguientes simbolos ¿?¡!@#$%&.\\n\"\r\n            errores++;\r\n        }\r\n        if(credencialP.length > 30){\r\n            txt = txt + \"La contraseña no puede tener más de 30 caracteres.\\n\"\r\n            errores++;\r\n        }\r\n    }\r\n\r\n    if(telefonoP ==\"\"){\r\n        txt = txt + \"El campo de telefono está vacío.\\n\";\r\n        errores++;\r\n    }else{\r\n        let regexTelefono = /^[0-9]*$/;\r\n        if(!regexTelefono.test(telefonoP)){\r\n            txt = txt + \"El telefono solo puede contener numeros.\\n\"\r\n            errores++;\r\n        }\r\n        if(telefonoP.length != 8){\r\n            txt = txt + \"El telefono no puede tener más de 8 caracteres.\\n\"\r\n            errores++;\r\n        }\r\n    }\r\n    \r\n    if(correoP ==\"\"){\r\n        txt = txt + \"El correo está vacío.\\n\";\r\n        errores++;\r\n    }else{\r\n        let regexCorreo = /^[^@]+@[^@]+\\.[a-zA-Z]{2,}$/;\r\n        if(!regexCorreo.test(correoP)){\r\n            txt = txt + \"El correo ingreado es incorrecto.\\n\"\r\n            errores++;\r\n        }\r\n    }\r\n }\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}