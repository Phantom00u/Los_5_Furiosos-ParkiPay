{"ast":null,"code":"const {\n  createUserDto\n} = require('../dtos/user.dto');\nmodule.exports = function ajaxRegistro() {\n  let nombre = document.getElementsByName(\"name_user\")[0].value;\n  let usuario = document.getElementsByName(\"username_user\")[0].value;\n  let correo = document.getElementsByName(\"email_user\")[0].value;\n  let telefono = document.getElementsByName(\"tel_user\")[0].value;\n  let credencial = document.getElementsByName(\"pssw_user\")[0].value;\n};\nfunction validarDatos(nombreP, usuarioP, correoP, telefonoP, credencialP) {\n  let errores = 0;\n  let txt = \"\";\n  if (nombreP == \"\") {\n    txt = txt + \"El campo de nombre está vacío.\\n\";\n    errores++;\n  } else {\n    let regexNombre = /^[a-zA-Z\\sñÁÉÍÓÚáéíóúàèìòùÀÈÌÒÙ]*$/;\n    if (!regexNombre.test(nombreP)) {\n      txt = txt + \"El campo de nombre solo puede contener letras.\\n\";\n      errores++;\n    }\n    if (nombreP.length > 100) {\n      txt = txt + \"El campo de nombre no puede tener más de 100 caracteres.\\n\";\n      errores++;\n    }\n  }\n}","map":{"version":3,"names":["createUserDto","require","module","exports","ajaxRegistro","nombre","document","getElementsByName","value","usuario","correo","telefono","credencial","validarDatos","nombreP","usuarioP","correoP","telefonoP","credencialP","errores","txt","regexNombre","test","length"],"sources":["C:/xampp/htdocs/Visual_Code_Projects/PrograWeb2/src/Funciones/Crear_Usuario.js"],"sourcesContent":["const {createUserDto} = require('../dtos/user.dto');\r\n\r\n module.exports = function ajaxRegistro(){\r\n    let nombre = document.getElementsByName(\"name_user\")[0].value;\r\n    let usuario = document.getElementsByName(\"username_user\")[0].value;\r\n    let correo = document.getElementsByName(\"email_user\")[0].value;\r\n    let telefono = document.getElementsByName(\"tel_user\")[0].value;\r\n    let credencial = document.getElementsByName(\"pssw_user\")[0].value;\r\n\r\n\r\n }\r\n\r\n function validarDatos(nombreP, usuarioP, correoP, telefonoP, credencialP){\r\n    let errores = 0;\r\n    let txt = \"\";\r\n    if(nombreP ==\"\"){\r\n        txt = txt + \"El campo de nombre está vacío.\\n\";\r\n        errores++;\r\n    }else{\r\n        let regexNombre = /^[a-zA-Z\\sñÁÉÍÓÚáéíóúàèìòùÀÈÌÒÙ]*$/;\r\n        if(!regexNombre.test(nombreP)){\r\n            txt = txt + \"El campo de nombre solo puede contener letras.\\n\"\r\n            errores++;\r\n        }\r\n        if(nombreP.length > 100){\r\n            txt = txt + \"El campo de nombre no puede tener más de 100 caracteres.\\n\"\r\n            errores++;\r\n        }\r\n    }\r\n }\r\n"],"mappings":"AAAA,MAAM;EAACA;AAAa,CAAC,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAElDC,MAAM,CAACC,OAAO,GAAG,SAASC,YAAY,GAAE;EACrC,IAAIC,MAAM,GAAGC,QAAQ,CAACC,iBAAiB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAACC,KAAK;EAC7D,IAAIC,OAAO,GAAGH,QAAQ,CAACC,iBAAiB,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAACC,KAAK;EAClE,IAAIE,MAAM,GAAGJ,QAAQ,CAACC,iBAAiB,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAACC,KAAK;EAC9D,IAAIG,QAAQ,GAAGL,QAAQ,CAACC,iBAAiB,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAACC,KAAK;EAC9D,IAAII,UAAU,GAAGN,QAAQ,CAACC,iBAAiB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAACC,KAAK;AAGpE,CAAC;AAED,SAASK,YAAY,CAACC,OAAO,EAAEC,QAAQ,EAAEC,OAAO,EAAEC,SAAS,EAAEC,WAAW,EAAC;EACtE,IAAIC,OAAO,GAAG,CAAC;EACf,IAAIC,GAAG,GAAG,EAAE;EACZ,IAAGN,OAAO,IAAG,EAAE,EAAC;IACZM,GAAG,GAAGA,GAAG,GAAG,kCAAkC;IAC9CD,OAAO,EAAE;EACb,CAAC,MAAI;IACD,IAAIE,WAAW,GAAG,oCAAoC;IACtD,IAAG,CAACA,WAAW,CAACC,IAAI,CAACR,OAAO,CAAC,EAAC;MAC1BM,GAAG,GAAGA,GAAG,GAAG,kDAAkD;MAC9DD,OAAO,EAAE;IACb;IACA,IAAGL,OAAO,CAACS,MAAM,GAAG,GAAG,EAAC;MACpBH,GAAG,GAAGA,GAAG,GAAG,4DAA4D;MACxED,OAAO,EAAE;IACb;EACJ;AACH"},"metadata":{},"sourceType":"module"}